여러 값들이 들어있는 컬렉션이나 배열을 for문 만이 아닌,
함수형 인터페이스를 이용해서 반복 처리할 수 있는 기능으로, 가독성 좋은 코드를 만들기 위한 기법이다.
이를 통해 간단한 병렬처리(parallel threading)도 가능하다.

==

스트림의 처리단계
1. 생성하기 : 스트림 인스턴스 생성
2. 가공하기 : 필터링 및 매핑등 원하는 결과를 만들어가는 중간 작업
3. 결과 만들기 : 최종적으로 결과를 만들어내는 작업

==

람다(함수형 인터페이스) 내부반복자를 이용하여 시간과 코드의 양을 줄인다.

외부반복자 : 컬랙션 내의 요소를 반복문을 통해 하나씩 읽고 처리하는 방식, next()
내부반복자 : 스트림의 forEach메서드에 람다식으로 기술하는 방식
