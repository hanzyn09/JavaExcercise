package com.hanzyn.section02.poly;

//다형성이 필요한 이유
//하드웨어에서 원하는 부품만 교체하듯이 소프트웨어에서도 교체만으로 적용할 수 있게 만든 개념 == 객체지향프로그래밍
//이러한 이유로 상속, 오버라이딩, 다형성 개념을 이용
public class PolyEx2 {

	public static void main(String[] args) {
		
		Parent p = new Child();
		
		p.run();
		
		Child c = (Child)p; //강제 형변환
		c.eat();

	}

}
/*
 * 조립컴퓨터 == 여러 부품을 모아 컴퓨터로 만든다.
 * 메인보드 + 그래픽 카드.
 * A사의 그래픽 카드를 사용하다가, 더 성능이 좋은 그래픽 카드를 사용하려고 한다.
 * 이 때, 새 그래픽 카드를 사서 메인보드로 교체만 하면 된다. (타사 제품도 적용됨)
 * A사의 그래픽 카드만 사용가능 하다면, 그래픽 니응을 업그레이드하기 위해 컴퓨터 부품을 전체 새로 구매해야하는데
 * 우리는 그래픽 카드라는 동일한 개념을 상위에 두고
 * A의 카드, 타사 카드도 (메인보드 입장에서는) 그냥 그래픽 카드이다. 하는 일, 꽂는 위치 모두 동일함.
 * sw에서도 hw처럼 원하는 부품만 교체하듯이 개발하게 한다.
 * */
 